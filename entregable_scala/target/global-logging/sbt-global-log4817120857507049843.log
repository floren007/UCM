[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 21)
[debug]                         Load.loadUnit: plugins took 20.9924ms
[debug]                         Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\flore\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\flore\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1773 ms
[debug]                             Load.resolveProject(global-plugins) took 1.0636ms
[debug]                           Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\flore\.sbt\1.0\plugins, plugins: List(<none>))) took 2.5882ms
[debug] [Loading] Done in C:\Users\flore\.sbt\1.0\plugins, returning: (global-plugins)
[debug]                         Load.loadUnit: loadedProjectsRaw took 3.6956ms
[debug]                         Load.loadUnit: cleanEvalClasses took 0.0084ms
[debug]                       Load.loadUnit(file:/C:/Users/flore/.sbt/1.0/plugins/, ...) took 25.2193ms
[debug]                     Load.apply: load took 26.3477ms
[debug]                     Load.apply: resolveProjects took 0.1005ms
[debug]                     Load.apply: finalTransforms took 8.5375ms
[debug]                     Load.apply: config.delegates took 0.2503ms
[debug]                     Load.apply: Def.make(settings)... took 83.603ms
[debug]                     Load.apply: structureIndex took 28.0316ms
[debug]                     Load.apply: mkStreams took 0.0032ms
[info] loading global plugins from C:\Users\flore\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                   Load.defaultLoad until apply took 403.2178ms
[debug]                             Load.loadUnit: plugins took 45.7996ms
[debug]                             Load.loadUnit: defsScala took 0.0185ms
[debug] [Loading] Scanning directory C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project
[debug]                               Load.loadUnit: mkEval took 0.8011ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6979 ms
[info] loading settings for project entregable_scala-build from plugins.sbt,idea.sbt ...
[debug]                                 Load.resolveProject(entregable_scala-build) took 15.6289ms
[debug]                               Load.loadTransitive: finalizeProject(Project(id entregable_scala-build, base: C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project, plugins: List(<none>))) took 18.1371ms
[debug] [Loading] Done in C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project, returning: (entregable_scala-build)
[debug]                             Load.loadUnit: loadedProjectsRaw took 84.0258ms
[debug]                             Load.loadUnit: cleanEvalClasses took 11.479ms
[debug]                           Load.loadUnit(file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/project/, ...) took 143.7591ms
[debug]                         Load.apply: load took 146.036ms
[debug]                         Load.apply: resolveProjects took 1.4524ms
[debug]                         Load.apply: finalTransforms took 9.801ms
[debug]                         Load.apply: config.delegates took 0.6065ms
[debug]                         Load.apply: Def.make(settings)... took 76.5486ms
[debug]                         Load.apply: structureIndex took 31.3828ms
[debug]                         Load.apply: mkStreams took 0.0071ms
[info] loading project definition from C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                       Load.loadUnit: plugins took 693.6051ms
[debug]                       Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala
[debug]                         Load.loadUnit: mkEval took 0.2443ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.6748 ms
[info] loading settings for project root from build.sbt ...
[debug]                           Load.resolveProject(root) took 50.7111ms
[debug]                         Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala, plugins: List(<none>))) took 55.975ms
[debug] [Loading] Done in C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala, returning: (root)
[debug]                       Load.loadUnit: loadedProjectsRaw took 2591.5726ms
[debug]                       Load.loadUnit: cleanEvalClasses took 53.4023ms
[debug]                     Load.loadUnit(file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/, ...) took 3339.6997ms
[debug]                   Load.apply: load took 3346.881ms
[debug]                   Load.apply: resolveProjects took 0.3685ms
[debug]                   Load.apply: finalTransforms took 37.3002ms
[debug]                   Load.apply: config.delegates took 1.1005ms
[debug]                   Load.apply: Def.make(settings)... took 75.0109ms
[debug]                   Load.apply: structureIndex took 18.1681ms
[debug]                   Load.apply: mkStreams took 0.0023ms
[info] set current project to entregable_scala (in build file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53954 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53954, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to entregable_scala (in build file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/)
[debug] > Exec(idea-shell, None, None)
