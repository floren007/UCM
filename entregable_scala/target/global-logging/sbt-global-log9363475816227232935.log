[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\flore\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\flore\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 21)
[debug]       Load.loadUnit: plugins took 175.347ms
[debug]       Load.loadUnit: defsScala took 0.6806ms
[debug] [Loading] Scanning directory C:\Users\flore\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\flore\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.1359 ms
[debug]           Load.resolveProject(global-plugins) took 66.6604ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\flore\.sbt\1.0\plugins, plugins: List(<none>))) took 118.1037ms
[debug] [Loading] Done in C:\Users\flore\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 158.3407ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3856ms
[debug]     Load.loadUnit(file:/C:/Users/flore/.sbt/1.0/plugins/, ...) took 353.07ms
[debug]   Load.apply: load took 661.1861ms
[debug]   Load.apply: resolveProjects took 11.0144ms
[debug]   Load.apply: finalTransforms took 89.5027ms
[debug]   Load.apply: config.delegates took 10.5797ms
[debug]   Load.apply: Def.make(settings)... took 529.7363ms
[debug]   Load.apply: structureIndex took 111.1003ms
[debug]   Load.apply: mkStreams took 1.7212ms
[info] loading global plugins from C:\Users\flore\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3229.424ms
[debug]           Load.loadUnit: plugins took 32.2969ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project
[debug]             Load.loadUnit: mkEval took 7.8012ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3892 ms
[info] loading settings for project entregable_scala-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(entregable_scala-build) took 3.8432ms
[debug]             Load.loadTransitive: finalizeProject(Project(id entregable_scala-build, base: C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project, plugins: List(<none>))) took 5.7244ms
[debug] [Loading] Done in C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project, returning: (entregable_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2735.793ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.4367ms
[debug]         Load.loadUnit(file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/project/, ...) took 2782.3949ms
[debug]       Load.apply: load took 2784.0462ms
[debug]       Load.apply: resolveProjects took 0.1323ms
[debug]       Load.apply: finalTransforms took 10.8548ms
[debug]       Load.apply: config.delegates took 0.5094ms
[debug]       Load.apply: Def.make(settings)... took 64.1785ms
[debug]       Load.apply: structureIndex took 29.0577ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4455.9379ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala
[debug]       Load.loadUnit: mkEval took 0.2717ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6443 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.1431ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala, plugins: List(<none>))) took 24.1813ms
[debug] [Loading] Done in C:\Users\flore\OneDrive\Escritorio\UCM\entregable_scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1328.6404ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.9312ms
[debug]   Load.loadUnit(file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/, ...) took 5803.393ms
[debug] Load.apply: load took 5805.1151ms
[debug] Load.apply: resolveProjects took 0.1509ms
[debug] Load.apply: finalTransforms took 21.2715ms
[debug] Load.apply: config.delegates took 0.2699ms
[debug] Load.apply: Def.make(settings)... took 59.2658ms
[debug] Load.apply: structureIndex took 22.2232ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to entregable_scala (in build file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 65241 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 65241, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to entregable_scala (in build file:/C:/Users/flore/OneDrive/Escritorio/UCM/entregable_scala/)
[debug] > Exec(idea-shell, None, None)
